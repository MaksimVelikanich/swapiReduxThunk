{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/Hero.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [character, setCharacter] = useState(null);\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      try {\n        const characterResponse = await fetch(`https://swapi.dev/api/people/${id}/`);\n        const characterData = await characterResponse.json();\n        setCharacter(characterData);\n        с;\n        const filmData = await Promise.all(characterData.films.map(async filmUrl => {\n          const filmResponse = await fetch(filmUrl);\n          return filmResponse.json();\n        }));\n        setFilms(filmData);\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacter();\n  }, [id]);\n  const handleFilmClick = film => {\n    const episodeId = film.url.split('/').slice(-2, -1)[0];\n    navigate(`/about-film/${episodeId}`);\n  };\n  if (!character) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"heroName\",\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filmInclude\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"labelFilm\",\n          children: \"Films:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), films.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AllFilms\",\n          onClick: () => handleFilmClick(film),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: film.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"1cnrywF1pV020oLP+Q9uGXk246U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Hero","_s","id","navigate","character","setCharacter","films","setFilms","fetchCharacter","characterResponse","fetch","characterData","json","с","filmData","Promise","all","map","filmUrl","filmResponse","error","console","handleFilmClick","film","episodeId","url","split","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","index","onClick","title","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/Hero.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst Hero = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [character, setCharacter] = useState(null);\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      try {\n        const characterResponse = await fetch(`https://swapi.dev/api/people/${id}/`);\n        const characterData = await characterResponse.json();\n        setCharacter(characterData);\n        с\n\n        const filmData = await Promise.all(characterData.films.map(async (filmUrl) => {\n          const filmResponse = await fetch(filmUrl);\n          return filmResponse.json();\n        }));\n        setFilms(filmData);\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n\n    fetchCharacter();\n  }, [id]);\n\n  const handleFilmClick = (film) => {\n    const episodeId = film.url.split('/').slice(-2, -1)[0];\n    navigate(`/about-film/${episodeId}`);\n  };\n\n  if (!character) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className='box'>\n      <div className='character'>\n        <h1 id=\"heroName\">{character.name}</h1>\n        <div className=\"details\">\n          {/* ... решта вашого коду ... */}\n        </div>\n        <div className=\"filmInclude\">\n          <h2 id=\"labelFilm\">Films:</h2>\n          {films.map((film, index) => (\n            <div className=\"AllFilms\" key={index} onClick={() => handleFilmClick(film)}>\n              <p>{film.title}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}