{"ast":null,"code":"import axios from 'axios';\nconst SET_FILM_DETAILS = 'SET_FILM_DETAILS';\nconst SET_LOADING = 'SET_LOADING';\nexport const setFilmDetails = filmDetails => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails\n});\nexport const setLoading = loading => ({\n  type: SET_LOADING,\n  payload: loading\n});\nexport const fetchFilmDetails = filmId => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(`https://swapi.dev/api/films/${filmId}/`);\n    const filmData = response.data;\n    const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n    const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n    const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n    const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n    const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n    const filmDetails = {\n      film: filmData,\n      characters: charactersData,\n      planets: planetsData,\n      starships: starshipsData,\n      vehicles: vehiclesData,\n      species: speciesData\n    };\n    dispatch(setFilmDetails(filmDetails));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\nconst initialState = {\n  film: null,\n  characters: [],\n  planets: [],\n  starships: [],\n  vehicles: [],\n  species: [],\n  loading: false\n};\nconst aboutFilmReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILM_DETAILS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default aboutFilmReducer;","map":{"version":3,"names":["axios","SET_FILM_DETAILS","SET_LOADING","setFilmDetails","filmDetails","type","payload","setLoading","loading","fetchFilmDetails","filmId","dispatch","response","get","filmData","data","charactersData","Promise","all","characters","map","url","then","res","planetsData","planets","starshipsData","starships","vehiclesData","vehicles","speciesData","species","film","error","console","initialState","aboutFilmReducer","state","action"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmReducer.js"],"sourcesContent":["import axios from 'axios';\n\nconst SET_FILM_DETAILS = 'SET_FILM_DETAILS';\nconst SET_LOADING = 'SET_LOADING';\n\nexport const setFilmDetails = (filmDetails) => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails,\n});\n\nexport const setLoading = (loading) => ({\n  type: SET_LOADING,\n  payload: loading,\n});\n\nexport const fetchFilmDetails = (filmId) => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n\n    const response = await axios.get(`https://swapi.dev/api/films/${filmId}/`);\n    const filmData = response.data;\n\n    const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n    const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n    const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n    const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n    const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n\n    const filmDetails = {\n      film: filmData,\n      characters: charactersData,\n      planets: planetsData,\n      starships: starshipsData,\n      vehicles: vehiclesData,\n      species: speciesData,\n    };\n\n    dispatch(setFilmDetails(filmDetails));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nconst initialState = {\n  film: null,\n  characters: [],\n  planets: [],\n  starships: [],\n  vehicles: [],\n  species: [],\n  loading: false,\n};\n\nconst aboutFilmReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILM_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default aboutFilmReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}