{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/Hero.js\",\n  _s = $RefreshSig$();\nimport { fetchHeroDetailsStart, fetchHeroDetailsSuccess, fetchHeroDetailsError } from '../store/heroActions';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchHeroDetails = async () => {\n      dispatch(fetchHeroDetailsStart(id));\n      try {\n        const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const heroData = await response.json();\n        const filmData = await Promise.all(heroData.films.map(async url => {\n          const filmResponse = await fetch(url);\n          if (!filmResponse.ok) {\n            throw new Error(`HTTP error! Status: ${filmResponse.status}`);\n          }\n          return filmResponse.json();\n        }));\n        dispatch(fetchHeroDetailsSuccess({\n          hero: heroData,\n          films: filmData\n        }));\n      } catch (error) {\n        dispatch(fetchHeroDetailsError(error));\n      }\n    };\n    fetchHeroDetails();\n  }, [dispatch, id]);\n  const handleFilmClick = id => {\n    navigate(`/about-film/${id}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"JcJwcamwUtvHG6DAIq5GRYhCZrI=\", true, function () {\n  return [useDispatch];\n});\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["fetchHeroDetailsStart","fetchHeroDetailsSuccess","fetchHeroDetailsError","useDispatch","useEffect","jsxDEV","_jsxDEV","Hero","_s","dispatch","id","useParams","fetchHeroDetails","response","fetch","ok","Error","status","heroData","json","filmData","Promise","all","films","map","url","filmResponse","hero","error","handleFilmClick","navigate","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/Hero.js"],"sourcesContent":["import {\n  fetchHeroDetailsStart,\n  fetchHeroDetailsSuccess,\n  fetchHeroDetailsError\n} from '../store/heroActions';\n\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst Hero = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchHeroDetails = async () => {\n      dispatch(fetchHeroDetailsStart(id));\n\n      try {\n        const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const heroData = await response.json();\n\n        const filmData = await Promise.all(heroData.films.map(async (url) => {\n          const filmResponse = await fetch(url);\n          if (!filmResponse.ok) {\n            throw new Error(`HTTP error! Status: ${filmResponse.status}`);\n          }\n\n          return filmResponse.json();\n        }));\n\n        dispatch(fetchHeroDetailsSuccess({ hero: heroData, films: filmData }));\n      } catch (error) {\n        dispatch(fetchHeroDetailsError(error));\n      }\n    };\n\n    fetchHeroDetails();\n  }, [dispatch, id]);\n\n\n  const handleFilmClick = (id) => {\n    navigate(`/about-film/${id}`);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div className='box'>\n      {/* Останній код компонента залишається незмінним */}\n    </div>\n  );\n};\n\nexport default Hero;\n"],"mappings":";;AAAA,SACEA,qBAAqB,EACrBC,uBAAuB,EACvBC,qBAAqB,QAChB,sBAAsB;AAE7B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAG,CAAC,GAAGC,SAAS,CAAC,CAAC;EAE1BP,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCH,QAAQ,CAACT,qBAAqB,CAACU,EAAE,CAAC,CAAC;MAEnC,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BJ,EAAG,GAAE,CAAC;QACnE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAEtC,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,KAAK,CAACC,GAAG,CAAC,MAAOC,GAAG,IAAK;UACnE,MAAMC,YAAY,GAAG,MAAMZ,KAAK,CAACW,GAAG,CAAC;UACrC,IAAI,CAACC,YAAY,CAACX,EAAE,EAAE;YACpB,MAAM,IAAIC,KAAK,CAAE,uBAAsBU,YAAY,CAACT,MAAO,EAAC,CAAC;UAC/D;UAEA,OAAOS,YAAY,CAACP,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEHV,QAAQ,CAACR,uBAAuB,CAAC;UAAE0B,IAAI,EAAET,QAAQ;UAAEK,KAAK,EAAEH;QAAS,CAAC,CAAC,CAAC;MACxE,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdnB,QAAQ,CAACP,qBAAqB,CAAC0B,KAAK,CAAC,CAAC;MACxC;IACF,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,QAAQ,EAAEC,EAAE,CAAC,CAAC;EAGlB,MAAMmB,eAAe,GAAInB,EAAE,IAAK;IAC9BoB,QAAQ,CAAE,eAAcpB,EAAG,EAAC,CAAC;EAC/B,CAAC;EAED,IAAIqB,OAAO,EAAE;IACX,oBAAOzB,OAAA;MAAA0B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIR,KAAK,EAAE;IACT,oBAAOtB,OAAA;MAAA0B,QAAA,GAAK,SAAO,EAACJ,KAAK,CAACS,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEA,oBACE9B,OAAA;IAAKgC,SAAS,EAAC;EAAK;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV,CAAC;AAAC5B,EAAA,CApDID,IAAI;EAAA,QACSJ,WAAW;AAAA;AAAAoC,EAAA,GADxBhC,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}