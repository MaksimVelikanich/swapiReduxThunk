{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom'; // Додано useNavigate\nimport star from '../img/star.jpeg';\nimport e from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AboutFilm() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate(); // Використовуйте useNavigate замість useParams\n  const filmFromLocation = location.state ? location.state.film : null;\n  const {\n    episode_id\n  } = useParams();\n  const [film, setFilm] = useState(null); // Додано стан для фільму\n\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const navigateToCharacter = url => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map(url => fetch(url).then(res => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map(url => fetch(url).then(res => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map(url => fetch(url).then(res => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map(url => fetch(url).then(res => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await axios.get(`https://swapi.dev/api/films/${episode_id}/`);\n        setFilm(filmData.data);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchFilm();\n  }, [episode_id]);\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutFilm, \"+utOKy3/40W4UjP8QglAZ2MARZo=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useParams","useNavigate","star","e","jsxDEV","_jsxDEV","AboutFilm","_s","location","navigate","filmFromLocation","state","film","episode_id","setFilm","characters","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","navigateToCharacter","url","match","id","fetchCharacters","promises","map","fetch","then","res","json","Promise","all","fetchPlanets","fetchStarships","fetchVehicles","fetchFilm","filmData","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","fontSize","fontWeight","paddingTop","color","title","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom'; // Додано useNavigate\nimport star from '../img/star.jpeg';\nimport e from 'express';\n\nfunction AboutFilm() {\n  const location = useLocation();\n  const navigate = useNavigate(); // Використовуйте useNavigate замість useParams\n  const filmFromLocation = location.state ? location.state.film : null;\n  const { episode_id } = useParams();\n\n  const [film, setFilm] = useState(null); // Додано стан для фільму\n\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n\n  const navigateToCharacter = (url) => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map((url) => fetch(url).then((res) => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map((url) => fetch(url).then((res) => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map((url) => fetch(url).then((res) => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map((url) => fetch(url).then((res) => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n\n  \nuseEffect(() => {\n  const fetchFilm = async () => {\n    try {\n      const filmData = await axios.get(`https://swapi.dev/api/films/${episode_id}/`);\n      setFilm(filmData.data);\n    } catch (error) {\n      console.error('Error fetching film:', error);\n    }\n  };\n\n  fetchFilm();\n}, [episode_id]);\n\n  if (!film) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}