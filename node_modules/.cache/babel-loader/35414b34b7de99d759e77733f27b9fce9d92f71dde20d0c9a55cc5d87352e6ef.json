{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport e from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://swapi.dev/api'; // Замініть на потрібний URL API\n\nconst getFilmById = id => {\n  return axios.get(`${API_URL}/films/${+id}`).then(response => {\n    return response.data;\n  });\n};\ngetFilmById(1);\nfunction AboutFilm() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.episode_id : null;\n  console.log(episode_id); // це буде ідентифікатор фільму\n\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  useEffect(() => {\n    if (episode_id) {\n      getFilmById(episode_id).then(data => setFilm(data));\n    }\n  }, [id]);\n  const navigateToCharacter = url => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map(url => fetch(url).then(res => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map(url => fetch(url).then(res => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map(url => fetch(url).then(res => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map(url => fetch(url).then(res => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(id); // Використовуємо функцію для отримання інформації про фільм\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchFilm();\n  }, [id]);\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutFilm, \"7SQn4DHBkaZnYYCVExEw4ls8Wxk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","star","e","jsxDEV","_jsxDEV","API_URL","getFilmById","id","get","then","response","data","AboutFilm","_s","location","navigate","filmFromLocation","state","film","episode_id","console","log","setFilm","characters","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","navigateToCharacter","url","match","fetchCharacters","promises","map","fetch","res","json","Promise","all","fetchPlanets","fetchStarships","fetchVehicles","fetchFilm","filmData","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","fontSize","fontWeight","paddingTop","color","title","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport e from 'express';\n\nconst API_URL = 'https://swapi.dev/api'; // Замініть на потрібний URL API\n\nconst getFilmById = (id) => {\n  return axios.get(`${API_URL}/films/${+id}`).then(response => {\n    return response.data;\n  });\n};\ngetFilmById(1);\n\nfunction AboutFilm() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.episode_id : null;\n  console.log(episode_id); // це буде ідентифікатор фільму\n\n  \n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  \n  useEffect(() => {\n    if (episode_id) {\n      getFilmById(episode_id).then((data) => setFilm(data));\n    }\n  }, [id]);\n\n  const navigateToCharacter = (url) => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map((url) => fetch(url).then((res) => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map((url) => fetch(url).then((res) => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map((url) => fetch(url).then((res) => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map((url) => fetch(url).then((res) => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(id); // Використовуємо функцію для отримання інформації про фільм\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n\n    fetchFilm();\n  }, [id]);\n\n  if (!film) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}