{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/Hero.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [character, setCharacter] = useState(null);\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      const data = await axios.get(`https://swapi.dev/api/people/${id}/`);\n      setCharacter(data.data);\n      const filmData = await Promise.all(data.data.films.map(film => axios.get(film)));\n      setFilms(filmData.map(response => response.data));\n    };\n    fetchCharacter();\n  }, [id]); // Запускати useEffect, коли `id` змінюється\n\n  if (!character) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height: \", character.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mass: \", character.mass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heir color: \", character.hair_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Skin color: \", character.skin_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Eyes color: \", character.eye_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birth Year: \", character.birth_year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filmInclude\",\n        children: films.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/about-film/${film.episode_id}`,\n              state: {\n                film\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: film.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Hero, \"8GFaLfR0SL4d2L38dRYgMBw7EeY=\", false, function () {\n  return [useParams];\n});\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","axios","jsxDEV","_jsxDEV","Hero","_s","id","character","setCharacter","films","setFilms","fetchCharacter","data","get","filmData","Promise","all","map","film","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","index","to","pathname","episode_id","state","title","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/Hero.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Hero() {\n  const { id } = useParams();\n  const [character, setCharacter] = useState(null);\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      const data = await axios.get(`https://swapi.dev/api/people/${id}/`);\n      setCharacter(data.data);\n\n      const filmData = await Promise.all(data.data.films.map(film => axios.get(film)));\n      setFilms(filmData.map(response => response.data));\n    };\n\n    fetchCharacter();\n  }, [id]); // Запускати useEffect, коли `id` змінюється\n\n  if (!character) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className='box'>\n        <div className='character'>\n        <h1>{character.name}</h1>\n        <p>Height: {character.height}</p>\n        <p>Mass: {character.mass}</p>\n        <p>Heir color: {character.hair_color}</p>\n        <p>Skin color: {character.skin_color}</p>\n        <p>Eyes color: {character.eye_color}</p>\n        <p>Birth Year: {character.birth_year}</p>\n        <p>Gender: {character.gender}</p>\n        <div className = \"filmInclude\">\n            {films.map((film, index) => (\n            <div key={index}>\n                <Link to={{ pathname: `/about-film/${film.episode_id}`, state: { film } }}>\n  <h2>{film.title}</h2>\n</Link>\n            </div>\n            ))}\n        </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Hero;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}