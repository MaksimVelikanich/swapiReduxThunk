{"ast":null,"code":"// heroActions.js\nexport const fetchHeroDetails = id => async dispatch => {\n  dispatch(fetchHeroDetailsStart(id));\n  try {\n    const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n    const heroData = await response.json();\n    const filmData = await Promise.all(heroData.films.map(url => fetch(url).then(res => res.json())));\n    dispatch(fetchHeroDetailsSuccess({\n      hero: heroData,\n      films: filmData\n    }));\n  } catch (error) {\n    dispatch(fetchHeroDetailsError(error));\n  }\n};","map":{"version":3,"names":["fetchHeroDetails","id","dispatch","fetchHeroDetailsStart","response","fetch","heroData","json","filmData","Promise","all","films","map","url","then","res","fetchHeroDetailsSuccess","hero","error","fetchHeroDetailsError"],"sources":["/Users/a1/react/swapi/src/store/heroActions.js"],"sourcesContent":["// heroActions.js\nexport const fetchHeroDetails = (id) => async (dispatch) => {\n    dispatch(fetchHeroDetailsStart(id));\n  \n    try {\n      const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n      const heroData = await response.json();\n  \n      const filmData = await Promise.all(heroData.films.map(url => fetch(url).then(res => res.json())));\n  \n      dispatch(fetchHeroDetailsSuccess({ hero: heroData, films: filmData }));\n    } catch (error) {\n      dispatch(fetchHeroDetailsError(error));\n    }\n  };\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACxDA,QAAQ,CAACC,qBAAqB,CAACF,EAAE,CAAC,CAAC;EAEnC,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BJ,EAAG,GAAE,CAAC;IACnE,MAAMK,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEtC,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,KAAK,CAACC,GAAG,CAACC,GAAG,IAAIR,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjGL,QAAQ,CAACc,uBAAuB,CAAC;MAAEC,IAAI,EAAEX,QAAQ;MAAEK,KAAK,EAAEH;IAAS,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdhB,QAAQ,CAACiB,qBAAqB,CAACD,KAAK,CAAC,CAAC;EACxC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}