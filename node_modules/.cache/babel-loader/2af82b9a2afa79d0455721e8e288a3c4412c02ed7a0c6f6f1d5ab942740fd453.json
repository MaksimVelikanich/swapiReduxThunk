{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://swapi.dev/api/films/'; // Замініть на потрібний URL API\n\nconst getFilmById = id => {\n  return axios.get(`${API_URL}${id}/`).then(response => {\n    return response.data;\n  });\n};\nconsole.log(id);\nfunction AboutFilm() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n  const {\n    id\n  } = useParams();\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  useEffect(() => {\n    if (filmIdFromUrl) {\n      getFilmById(filmIdFromUrl).then(data => setFilm(data)); // використовуйте filmIdFromUrl тут\n    }\n  }, [filmIdFromUrl]); // і тут\n\n  // ...інший код...\n\n  const navigateToCharacter = url => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map(url => fetch(url).then(res => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map(url => fetch(url).then(res => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map(url => fetch(url).then(res => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map(url => fetch(url).then(res => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchSpecies = async () => {\n        const promises = filmFromLocation.species.map(url => fetch(url).then(res => res.json()));\n        const species = await Promise.all(promises);\n        setSpecies(species);\n      };\n      fetchSpecies();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(filmIdFromUrl); // використовуйте filmIdFromUrl тут\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchFilm();\n  }, [filmIdFromUrl]); // і тут\n\n  useEffect(() => {\n    if (id) {\n      getFilmById(id).then(data => {\n        setFilm(data);\n        // Завантажте інші дані, які вам потрібні\n      });\n    }\n  }, [id]); // Додайте `id` в залежності useEffect, щоб він виконувався, коли `id` змінюється\n\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutFilm, \"xp8wmlmIEeqoSMcIxx59TZFplrQ=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","useParams","star","jsxDEV","_jsxDEV","API_URL","getFilmById","id","get","then","response","data","console","log","AboutFilm","_s","location","navigate","filmFromLocation","state","film","episode_id","url","filmIdFromUrl","split","slice","setFilm","characters","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","navigateToCharacter","match","fetchCharacters","promises","map","fetch","res","json","Promise","all","fetchPlanets","fetchStarships","fetchVehicles","fetchSpecies","fetchFilm","filmData","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","fontSize","fontWeight","paddingTop","color","title","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate,useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\n\nconst API_URL = 'https://swapi.dev/api/films/'; // Замініть на потрібний URL API\n\nconst getFilmById = (id) => {\n  return axios.get(`${API_URL}${id}/`).then(response => {\n    return response.data;\n  });\n};\nconsole.log(id)\nfunction AboutFilm() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const filmFromLocation = location.state ? location.state.film : null;\nconst episode_id = filmFromLocation ? filmFromLocation.url : null;\nconst filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n  const { id } = useParams();\n\n\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n\n  useEffect(() => {\n    if (filmIdFromUrl) {\n      getFilmById(filmIdFromUrl).then((data) => setFilm(data)); // використовуйте filmIdFromUrl тут\n    }\n  }, [filmIdFromUrl]); // і тут\n\n  // ...інший код...\n\n\n  const navigateToCharacter = (url) => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map((url) => fetch(url).then((res) => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map((url) => fetch(url).then((res) => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map((url) => fetch(url).then((res) => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map((url) => fetch(url).then((res) => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchSpecies = async () => {\n        const promises = filmFromLocation.species.map((url) => fetch(url).then((res) => res.json()));\n        const species = await Promise.all(promises);\n        setSpecies(species);\n      };\n      fetchSpecies();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(filmIdFromUrl); // використовуйте filmIdFromUrl тут\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n  \n    fetchFilm();\n  }, [filmIdFromUrl]); // і тут\n\n  useEffect(() => {\n    if (id) {\n      getFilmById(id).then(data => {\n        setFilm(data);\n        // Завантажте інші дані, які вам потрібні\n      });\n    }\n  }, [id]); // Додайте `id` в залежності useEffect, щоб він виконувався, коли `id` змінюється\n\n  \n  if (!film) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}