{"ast":null,"code":"import { setFilmDetails, setLoading } from './aboutFilmReducer';\nimport axios from 'axios';\nconst API_URL = 'https://swapi.dev/api/films/';\nfi;\nexport const fetchFilmDetails = id => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(`${API_URL}${id || filmIdFromUrl}/`);\n    const filmData = response.data;\n    const charactersPromises = filmData.characters.map(url => axios.get(url).then(response => response.data));\n    const planetsPromises = filmData.planets.map(url => axios.get(url).then(response => response.data));\n    const starshipsPromises = filmData.starships.map(url => axios.get(url).then(response => response.data));\n    const vehiclesPromises = filmData.vehicles.map(url => axios.get(url).then(response => response.data));\n    const speciesPromises = filmData.species.map(url => axios.get(url).then(response => response.data));\n    const [charactersData, planetsData, starshipsData, vehiclesData, speciesData] = await Promise.all([Promise.all(charactersPromises), Promise.all(planetsPromises), Promise.all(starshipsPromises), Promise.all(vehiclesPromises), Promise.all(speciesPromises)]);\n    dispatch(setFilmDetails({\n      film: filmData,\n      characters: charactersData,\n      planets: planetsData,\n      starships: starshipsData,\n      vehicles: vehiclesData,\n      species: speciesData\n    }));\n    dispatch(setLoading(false));\n  } catch (error) {\n    console.error('Error fetching film details:', error.message);\n    dispatch(setLoading(false));\n  }\n};","map":{"version":3,"names":["setFilmDetails","setLoading","axios","API_URL","fi","fetchFilmDetails","id","dispatch","response","get","filmIdFromUrl","filmData","data","charactersPromises","characters","map","url","then","planetsPromises","planets","starshipsPromises","starships","vehiclesPromises","vehicles","speciesPromises","species","charactersData","planetsData","starshipsData","vehiclesData","speciesData","Promise","all","film","error","console","message"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmActions.js"],"sourcesContent":["import { setFilmDetails, setLoading } from './aboutFilmReducer';\nimport axios from 'axios';\n\n\nconst API_URL = 'https://swapi.dev/api/films/';\nfi\nexport const fetchFilmDetails = (id) => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n\n    const response = await axios.get(`${API_URL}${id || filmIdFromUrl}/`);\n    const filmData = response.data;\n\n    const charactersPromises = filmData.characters.map((url) => axios.get(url).then((response) => response.data));\n    const planetsPromises = filmData.planets.map((url) => axios.get(url).then((response) => response.data));\n    const starshipsPromises = filmData.starships.map((url) => axios.get(url).then((response) => response.data));\n    const vehiclesPromises = filmData.vehicles.map((url) => axios.get(url).then((response) => response.data));\n    const speciesPromises = filmData.species.map((url) => axios.get(url).then((response) => response.data));\n\n    const [charactersData, planetsData, starshipsData, vehiclesData, speciesData] = await Promise.all([\n      Promise.all(charactersPromises),\n      Promise.all(planetsPromises),\n      Promise.all(starshipsPromises),\n      Promise.all(vehiclesPromises),\n      Promise.all(speciesPromises),\n    ]);\n\n    dispatch(\n      setFilmDetails({\n        film: filmData,\n        characters: charactersData,\n        planets: planetsData,\n        starships: starshipsData,\n        vehicles: vehiclesData,\n        species: speciesData,\n      })\n    );\n\n    dispatch(setLoading(false));\n  } catch (error) {\n    console.error('Error fetching film details:', error.message);\n    dispatch(setLoading(false));\n  }\n};\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,QAAQ,oBAAoB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,8BAA8B;AAC9CC,EAAE;AACF,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC;IAE1B,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,GAAEG,EAAE,IAAII,aAAc,GAAE,CAAC;IACrE,MAAMC,QAAQ,GAAGH,QAAQ,CAACI,IAAI;IAE9B,MAAMC,kBAAkB,GAAGF,QAAQ,CAACG,UAAU,CAACC,GAAG,CAAEC,GAAG,IAAKd,KAAK,CAACO,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC7G,MAAMM,eAAe,GAAGP,QAAQ,CAACQ,OAAO,CAACJ,GAAG,CAAEC,GAAG,IAAKd,KAAK,CAACO,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvG,MAAMQ,iBAAiB,GAAGT,QAAQ,CAACU,SAAS,CAACN,GAAG,CAAEC,GAAG,IAAKd,KAAK,CAACO,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC3G,MAAMU,gBAAgB,GAAGX,QAAQ,CAACY,QAAQ,CAACR,GAAG,CAAEC,GAAG,IAAKd,KAAK,CAACO,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC;IACzG,MAAMY,eAAe,GAAGb,QAAQ,CAACc,OAAO,CAACV,GAAG,CAAEC,GAAG,IAAKd,KAAK,CAACO,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC;IAEvG,MAAM,CAACc,cAAc,EAAEC,WAAW,EAAEC,aAAa,EAAEC,YAAY,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChGD,OAAO,CAACC,GAAG,CAACnB,kBAAkB,CAAC,EAC/BkB,OAAO,CAACC,GAAG,CAACd,eAAe,CAAC,EAC5Ba,OAAO,CAACC,GAAG,CAACZ,iBAAiB,CAAC,EAC9BW,OAAO,CAACC,GAAG,CAACV,gBAAgB,CAAC,EAC7BS,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC,CAC7B,CAAC;IAEFjB,QAAQ,CACNP,cAAc,CAAC;MACbiC,IAAI,EAAEtB,QAAQ;MACdG,UAAU,EAAEY,cAAc;MAC1BP,OAAO,EAAEQ,WAAW;MACpBN,SAAS,EAAEO,aAAa;MACxBL,QAAQ,EAAEM,YAAY;MACtBJ,OAAO,EAAEK;IACX,CAAC,CACH,CAAC;IAEDvB,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOiC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5D7B,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC;EAC7B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}