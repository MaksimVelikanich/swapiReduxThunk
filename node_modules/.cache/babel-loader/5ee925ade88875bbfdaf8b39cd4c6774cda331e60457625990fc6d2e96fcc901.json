{"ast":null,"code":"// filmsReducer.js\n\nimport axios from 'axios';\n\n// Action types\nconst SET_FILMS = 'SET_FILMS';\nconst SET_FILM_DETAILS = 'SET_FILM_DETAILS';\n\n// Action creators\nexport const setFilms = films => ({\n  type: SET_FILMS,\n  payload: films\n});\nexport const setFilmDetails = filmDetails => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails\n});\n\n// Initial state\nconst initialState = {\n  films: [],\n  filmDetails: {} // Додайте об'єкт для зберігання деталей кожного фільму\n};\n\n// Reducer\nconst filmsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILMS:\n      return {\n        ...state,\n        films: action.payload\n      };\n    case SET_FILM_DETAILS:\n      return {\n        ...state,\n        filmDetails: {\n          ...state.filmDetails,\n          [action.payload.episode_id]: action.payload.details\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// Thunk function to fetch films with details\nexport const fetchFilms = () => async dispatch => {\n  try {\n    const response = await axios.get('https://swapi.dev/api/films');\n    const filmsData = response.data.results;\n    dispatch(setFilms(filmsData));\n\n    // Для кожного фільму отримуємо додаткові дані та відправляємо їх у стан\n    for (const film of filmsData) {\n      const filmDetailsResponse = await axios.get(film.url);\n      const filmDetails = filmDetailsResponse.data;\n      dispatch(setFilmDetails({\n        episode_id: film.episode_id,\n        details: filmDetails\n      }));\n    }\n  } catch (error) {\n    console.error('Error fetching films:', error);\n  }\n};\nexport default filmsReducer;","map":{"version":3,"names":["axios","SET_FILMS","SET_FILM_DETAILS","setFilms","films","type","payload","setFilmDetails","filmDetails","initialState","filmsReducer","state","action","episode_id","details","fetchFilms","dispatch","response","get","filmsData","data","results","film","filmDetailsResponse","url","error","console"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmReducer.js"],"sourcesContent":["// filmsReducer.js\n\nimport axios from 'axios';\n\n// Action types\nconst SET_FILMS = 'SET_FILMS';\nconst SET_FILM_DETAILS = 'SET_FILM_DETAILS';\n\n// Action creators\nexport const setFilms = (films) => ({\n  type: SET_FILMS,\n  payload: films,\n});\n\nexport const setFilmDetails = (filmDetails) => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails,\n});\n\n// Initial state\nconst initialState = {\n  films: [],\n  filmDetails: {}, // Додайте об'єкт для зберігання деталей кожного фільму\n};\n\n// Reducer\nconst filmsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILMS:\n      return {\n        ...state,\n        films: action.payload,\n      };\n    case SET_FILM_DETAILS:\n      return {\n        ...state,\n        filmDetails: {\n          ...state.filmDetails,\n          [action.payload.episode_id]: action.payload.details,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\n// Thunk function to fetch films with details\nexport const fetchFilms = () => async (dispatch) => {\n  try {\n    const response = await axios.get('https://swapi.dev/api/films');\n    const filmsData = response.data.results;\n\n    dispatch(setFilms(filmsData));\n\n    // Для кожного фільму отримуємо додаткові дані та відправляємо їх у стан\n    for (const film of filmsData) {\n      const filmDetailsResponse = await axios.get(film.url);\n      const filmDetails = filmDetailsResponse.data;\n\n      dispatch(setFilmDetails({ episode_id: film.episode_id, details: filmDetails }));\n    }\n  } catch (error) {\n    console.error('Error fetching films:', error);\n  }\n};\n\nexport default filmsReducer;\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAG,WAAW;AAC7B,MAAMC,gBAAgB,GAAG,kBAAkB;;AAE3C;AACA,OAAO,MAAMC,QAAQ,GAAIC,KAAK,KAAM;EAClCC,IAAI,EAAEJ,SAAS;EACfK,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAAIC,WAAW,KAAM;EAC9CH,IAAI,EAAEH,gBAAgB;EACtBI,OAAO,EAAEE;AACX,CAAC,CAAC;;AAEF;AACA,MAAMC,YAAY,GAAG;EACnBL,KAAK,EAAE,EAAE;EACTI,WAAW,EAAE,CAAC,CAAC,CAAE;AACnB,CAAC;;AAED;AACA,MAAME,YAAY,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACP,IAAI;IACjB,KAAKJ,SAAS;MACZ,OAAO;QACL,GAAGU,KAAK;QACRP,KAAK,EAAEQ,MAAM,CAACN;MAChB,CAAC;IACH,KAAKJ,gBAAgB;MACnB,OAAO;QACL,GAAGS,KAAK;QACRH,WAAW,EAAE;UACX,GAAGG,KAAK,CAACH,WAAW;UACpB,CAACI,MAAM,CAACN,OAAO,CAACO,UAAU,GAAGD,MAAM,CAACN,OAAO,CAACQ;QAC9C;MACF,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,6BAA6B,CAAC;IAC/D,MAAMC,SAAS,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO;IAEvCL,QAAQ,CAACb,QAAQ,CAACgB,SAAS,CAAC,CAAC;;IAE7B;IACA,KAAK,MAAMG,IAAI,IAAIH,SAAS,EAAE;MAC5B,MAAMI,mBAAmB,GAAG,MAAMvB,KAAK,CAACkB,GAAG,CAACI,IAAI,CAACE,GAAG,CAAC;MACrD,MAAMhB,WAAW,GAAGe,mBAAmB,CAACH,IAAI;MAE5CJ,QAAQ,CAACT,cAAc,CAAC;QAAEM,UAAU,EAAES,IAAI,CAACT,UAAU;QAAEC,OAAO,EAAEN;MAAY,CAAC,CAAC,CAAC;IACjF;EACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;AAED,eAAef,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}