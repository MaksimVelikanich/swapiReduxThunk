{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://swapi.dev/api/films/'; // Замініть на потрібний URL API\n\nconst getFilmById = id => {\n  return axios.get(`${API_URL}${id}/`).then(response => {\n    return response.data;\n  });\n};\nfunction AboutFilm() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null; // витягує ID з URL\n  const {\n    id\n  } = useParams();\n  const promises = filmFromLocation.characters.map(url => fetch(`https://cors-anywhere.herokuapp.com/${url}`).then(res => res.json()));\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  useEffect(() => {\n    if (filmIdFromUrl) {\n      getFilmById(filmIdFromUrl).then(data => setFilm(data)); // використовуйте filmIdFromUrl тут\n    }\n  }, [filmIdFromUrl]); // і тут\n\n  // ...інший код...\n\n  const navigateToCharacter = url => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map(url => fetch(url).then(res => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map(url => fetch(url).then(res => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map(url => fetch(url).then(res => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map(url => fetch(url).then(res => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchSpecies = async () => {\n        const promises = filmFromLocation.species.map(url => fetch(url).then(res => res.json()));\n        const species = await Promise.all(promises);\n        setSpecies(species);\n      };\n      fetchSpecies();\n    }\n  }, [filmFromLocation]);\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(filmIdFromUrl); // використовуйте filmIdFromUrl тут\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchFilm();\n  }, [filmIdFromUrl]); // і тут\n\n  useEffect(() => {\n    if (id) {\n      getFilmById(id).then(data => {\n        setFilm(data);\n        // Завантажте інші дані, які вам потрібні\n      });\n    }\n  }, [id]); // Додайте `id` в залежності useEffect, щоб він виконувався, коли `id` змінюється\n\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutFilm, \"xp8wmlmIEeqoSMcIxx59TZFplrQ=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","useParams","star","jsxDEV","_jsxDEV","API_URL","getFilmById","id","get","then","response","data","AboutFilm","_s","location","navigate","filmFromLocation","state","film","episode_id","url","filmIdFromUrl","split","slice","promises","characters","map","fetch","res","json","setFilm","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","navigateToCharacter","match","fetchCharacters","Promise","all","fetchPlanets","fetchStarships","fetchVehicles","fetchSpecies","fetchFilm","filmData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","fontSize","fontWeight","paddingTop","color","title","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate,useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\n\nconst API_URL = 'https://swapi.dev/api/films/'; // Замініть на потрібний URL API\n\nconst getFilmById = (id) => {\n  return axios.get(`${API_URL}${id}/`).then(response => {\n    return response.data;\n  });\n};\nfunction AboutFilm() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null; // витягує ID з URL\n  const { id } = useParams();\n  const promises = filmFromLocation.characters.map((url) => fetch(`https://cors-anywhere.herokuapp.com/${url}`).then((res) => res.json()));\n\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n\n  useEffect(() => {\n    if (filmIdFromUrl) {\n      getFilmById(filmIdFromUrl).then((data) => setFilm(data)); // використовуйте filmIdFromUrl тут\n    }\n  }, [filmIdFromUrl]); // і тут\n\n  // ...інший код...\n\n\n  const navigateToCharacter = (url) => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchCharacters = async () => {\n        const promises = filmFromLocation.characters.map((url) => fetch(url).then((res) => res.json()));\n        const characters = await Promise.all(promises);\n        setCharacters(characters);\n      };\n      fetchCharacters();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchPlanets = async () => {\n        const promises = filmFromLocation.planets.map((url) => fetch(url).then((res) => res.json()));\n        const planets = await Promise.all(promises);\n        setPlanets(planets);\n      };\n      fetchPlanets();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchStarships = async () => {\n        const promises = filmFromLocation.starships.map((url) => fetch(url).then((res) => res.json()));\n        const starships = await Promise.all(promises);\n        setStarships(starships);\n      };\n      fetchStarships();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchVehicles = async () => {\n        const promises = filmFromLocation.vehicles.map((url) => fetch(url).then((res) => res.json()));\n        const vehicles = await Promise.all(promises);\n        setVehicles(vehicles);\n      };\n      fetchVehicles();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    if (filmFromLocation) {\n      const fetchSpecies = async () => {\n        const promises = filmFromLocation.species.map((url) => fetch(url).then((res) => res.json()));\n        const species = await Promise.all(promises);\n        setSpecies(species);\n      };\n      fetchSpecies();\n    }\n  }, [filmFromLocation]);\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(filmIdFromUrl); // використовуйте filmIdFromUrl тут\n        setFilm(filmData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n  \n    fetchFilm();\n  }, [filmIdFromUrl]); // і тут\n\n  useEffect(() => {\n    if (id) {\n      getFilmById(id).then(data => {\n        setFilm(data);\n        // Завантажте інші дані, які вам потрібні\n      });\n    }\n  }, [id]); // Додайте `id` в залежності useEffect, щоб він виконувався, коли `id` змінюється\n\n  \n  if (!film) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}