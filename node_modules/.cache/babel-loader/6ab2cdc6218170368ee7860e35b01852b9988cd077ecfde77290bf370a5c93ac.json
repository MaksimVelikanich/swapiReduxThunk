{"ast":null,"code":"// AboutFilmAction.js\nimport axios from 'axios';\n\n// інші типи, які вам можуть знадобитися\n\nexport const SET_FILM_DETAILS = 'SET_FILM_DETAILS';\nexport const SET_CHARACTERS = 'SET_CHARACTERS';\nexport const SET_CHARACTER_NAMES = 'SET_CHARACTER_NAMES';\nexport const SET_PLANETS = 'SET_PLANETS';\nexport const SET_STARSHIPS_NAMES = 'SET_STARSHIPS_NAMES';\nexport const SET_STARSHIPS = 'SET_STARSHIPS';\nexport const SET_VEHICLES = 'SET_VEHICLES';\nexport const SET_SPECIES = 'SET_SPECIES';\nexport const setFilmDetails = filmDetails => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails\n});\nexport const setCharacters = characters => ({\n  type: SET_CHARACTERS,\n  payload: characters\n});\nexport const setCharacterNames = characterNames => ({\n  type: SET_CHARACTER_NAMES,\n  payload: characterNames\n});\nexport const setPlanets = planets => ({\n  type: SET_PLANETS,\n  payload: planets\n});\nexport const setStarships = starships => ({\n  type: SET_STARSHIPS,\n  payload: starships\n});\nexport const setStarshipsNames = starshipsNames => ({\n  type: SET_STARSHIPS_NAMES,\n  payload: starshipsNames\n});\nexport const setVehicles = vehicles => ({\n  type: SET_VEHICLES,\n  payload: vehicles\n});\nexport const setSpecies = species => ({\n  type: SET_SPECIES,\n  payload: species\n});\nexport const fetchFilmDetails = filmId => async dispatch => {\n  try {\n    const response = await axios.get(`https://swapi.dev/api/films/${filmId}`);\n    const filmData = response.data;\n    console.log(\"filmDatEEEa:\", filmData);\n    const filmsDetailsData = {\n      title: filmData.title,\n      episode_id: filmData.episode_id,\n      opening_crawl: filmData.opening_crawl,\n      director: filmData.director,\n      producer: filmData.producer,\n      release_date: filmData.release_date,\n      characters: filmData.characters,\n      planets: filmData.planets,\n      species: filmData.species,\n      starships: filmData.starships,\n      vehicles: filmData.vehicles\n    };\n    const charactersData = await Promise.all(filmsDetailsData.characters.map(async characterUrl => {\n      const characterResponse = await axios.get(characterUrl);\n      const characterData = characterResponse.data;\n      return {\n        name: characterData.name,\n        url: characterUrl\n      };\n    }));\n    const planetsData = await Promise.all(filmsDetailsData.planets.map(async planetUrl => {\n      const planetResponse = await axios.get(planetUrl);\n      return planetResponse.data;\n    }));\n    const starshipsData = await Promise.all(filmsDetailsData.starships.map(async starshipUrl => {\n      const starshipResponse = await axios.get(starshipUrl);\n      return starshipResponse.data;\n    }));\n    const vehiclesData = await Promise.all(filmsDetailsData.vehicles.map(async vehicleUrl => {\n      const vehicleResponse = await axios.get(vehicleUrl);\n      return vehicleResponse.data;\n    }));\n    const speciesData = await Promise.all(filmsDetailsData.species.map(async specieUrl => {\n      const specieResponse = await axios.get(specieUrl);\n      return specieResponse.data;\n    }));\n    dispatch(setFilmDetails(filmsDetailsData));\n    dispatch(setCharacters(charactersData));\n    dispatch(setCharacterNames(charactersData.map(character => character.name)));\n    dispatch(setPlanets(planetsData.map(planet => planet.name)));\n    dispatch(setStarships(starshipsData.map(starship => starship.name)));\n    dispatch(setStarshipsNames(starshipsData.map(starship => starship.name)));\n    dispatch(setVehicles(vehiclesData.map(vehicle => vehicle.name)));\n    dispatch(setSpecies(speciesData.map(specie => specie.name)));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n    console.error('Response:', error.response);\n  }\n};","map":{"version":3,"names":["axios","SET_FILM_DETAILS","SET_CHARACTERS","SET_CHARACTER_NAMES","SET_PLANETS","SET_STARSHIPS_NAMES","SET_STARSHIPS","SET_VEHICLES","SET_SPECIES","setFilmDetails","filmDetails","type","payload","setCharacters","characters","setCharacterNames","characterNames","setPlanets","planets","setStarships","starships","setStarshipsNames","starshipsNames","setVehicles","vehicles","setSpecies","species","fetchFilmDetails","filmId","dispatch","response","get","filmData","data","console","log","filmsDetailsData","title","episode_id","opening_crawl","director","producer","release_date","charactersData","Promise","all","map","characterUrl","characterResponse","characterData","name","url","planetsData","planetUrl","planetResponse","starshipsData","starshipUrl","starshipResponse","vehiclesData","vehicleUrl","vehicleResponse","speciesData","specieUrl","specieResponse","character","planet","starship","vehicle","specie","error"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmActions.js"],"sourcesContent":["// AboutFilmAction.js\nimport axios from 'axios';\n\n// інші типи, які вам можуть знадобитися\n\nexport const SET_FILM_DETAILS = 'SET_FILM_DETAILS';\nexport const SET_CHARACTERS = 'SET_CHARACTERS';\nexport const SET_CHARACTER_NAMES = 'SET_CHARACTER_NAMES';\nexport const SET_PLANETS = 'SET_PLANETS';\nexport const SET_STARSHIPS_NAMES = 'SET_STARSHIPS_NAMES';\nexport const SET_STARSHIPS = 'SET_STARSHIPS';\nexport const SET_VEHICLES = 'SET_VEHICLES';\nexport const SET_SPECIES = 'SET_SPECIES';\n\nexport const setFilmDetails = (filmDetails) => ({\n  type: SET_FILM_DETAILS,\n  payload: filmDetails,\n});\n\nexport const setCharacters = (characters) => ({\n  type: SET_CHARACTERS,\n  payload: characters,\n});\n\nexport const setCharacterNames = (characterNames) => ({\n  type: SET_CHARACTER_NAMES,\n  payload: characterNames,\n});\n\nexport const setPlanets = (planets) => ({\n  type: SET_PLANETS,\n  payload: planets,\n});\n\nexport const setStarships = (starships) => ({\n  type: SET_STARSHIPS,\n  payload: starships,\n});\n\nexport const setStarshipsNames = (starshipsNames) => ({\n  type: SET_STARSHIPS_NAMES,\n  payload: starshipsNames,\n});\n\nexport const setVehicles = (vehicles) => ({\n  type: SET_VEHICLES,\n  payload: vehicles,\n});\n\nexport const setSpecies = (species) => ({\n  type: SET_SPECIES,\n  payload: species,\n});\n\nexport const fetchFilmDetails = (filmId) => async (dispatch) => {\n  try {\n    const response = await axios.get(`https://swapi.dev/api/films/${filmId}`);\n    const filmData = response.data;\n    console.log(\"filmDatEEEa:\", filmData);\n\n    const filmsDetailsData = {\n      title: filmData.title,\n      episode_id: filmData.episode_id,\n      opening_crawl: filmData.opening_crawl,\n      director: filmData.director,\n      producer: filmData.producer,\n      release_date: filmData.release_date,\n      characters: filmData.characters,\n      planets: filmData.planets,\n      species: filmData.species,\n      starships: filmData.starships,\n      vehicles: filmData.vehicles,\n    };\n\n    const charactersData = await Promise.all(\n      filmsDetailsData.characters.map(async (characterUrl) => {\n        const characterResponse = await axios.get(characterUrl);\n        const characterData = characterResponse.data;\n        return { name: characterData.name, url: characterUrl };\n      })\n    );\n\n    const planetsData = await Promise.all(\n      filmsDetailsData.planets.map(async (planetUrl) => {\n        const planetResponse = await axios.get(planetUrl);\n        return planetResponse.data;\n      })\n    );\n\n    const starshipsData = await Promise.all(\n      filmsDetailsData.starships.map(async (starshipUrl) => {\n        const starshipResponse = await axios.get(starshipUrl);\n        return starshipResponse.data;\n      })\n    );\n\n    const vehiclesData = await Promise.all(\n      filmsDetailsData.vehicles.map(async (vehicleUrl) => {\n        const vehicleResponse = await axios.get(vehicleUrl);\n        return vehicleResponse.data;\n      })\n    );\n\n    const speciesData = await Promise.all(\n      filmsDetailsData.species.map(async (specieUrl) => {\n        const specieResponse = await axios.get(specieUrl);\n        return specieResponse.data;\n      })\n    );\n\n    dispatch(setFilmDetails(filmsDetailsData));\n    dispatch(setCharacters(charactersData));\n    dispatch(setCharacterNames(charactersData.map(character => character.name)));\n    dispatch(setPlanets(planetsData.map(planet => planet.name)));\n    dispatch(setStarships(starshipsData.map(starship => starship.name)));\n    dispatch(setStarshipsNames(starshipsData.map(starship => starship.name)));\n    dispatch(setVehicles(vehiclesData.map(vehicle => vehicle.name)));\n    dispatch(setSpecies(speciesData.map(specie => specie.name)));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n    console.error('Response:', error.response);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}