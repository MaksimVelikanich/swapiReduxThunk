{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://swapi.dev/api/films/';\nconst AboutFilm = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n  const {\n    id\n  } = useParams();\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${API_URL}${id || filmIdFromUrl}/`);\n        const filmData = response.data;\n        setFilm(filmData);\n        const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n        setCharacters(charactersData);\n        const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n        setPlanets(planetsData);\n        const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n        setStarships(starshipsData);\n        const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n        setVehicles(vehiclesData);\n        const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n        setSpecies(speciesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [id, filmIdFromUrl]);\n  const navigateToCharacter = url => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AboutFilm, \"y2Hbs58fIV0qM106nKIPXnrOtkk=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","useParams","star","jsxDEV","_jsxDEV","API_URL","AboutFilm","_s","location","navigate","filmFromLocation","state","film","episode_id","url","filmIdFromUrl","split","slice","id","setFilm","characters","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","fetchData","response","get","filmData","data","charactersData","Promise","all","map","then","res","planetsData","starshipsData","vehiclesData","speciesData","error","console","navigateToCharacter","match","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","title","style","fontSize","fontWeight","paddingTop","color","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport star from '../img/star.jpeg';\n\nconst API_URL = 'https://swapi.dev/api/films/';\n\nconst AboutFilm = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const filmFromLocation = location.state ? location.state.film : null;\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n  const { id } = useParams();\n\n  const [film, setFilm] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${API_URL}${id || filmIdFromUrl}/`);\n        const filmData = response.data;\n        setFilm(filmData);\n        const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n        setCharacters(charactersData);\n        const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n        setPlanets(planetsData);\n        const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n        setStarships(starshipsData);\n        const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n        setVehicles(vehiclesData);\n        const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n        setSpecies(speciesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [id, filmIdFromUrl]);\n\n  const navigateToCharacter = (url) => {\n    const match = url.match(/\\/people\\/(\\d+)/);\n    if (match) {\n      const id = match[1];\n      navigate(`/character/${id}`);\n    }\n  };\n\n  if (!film) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}