{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'; // Import useParams\nimport star from '../img/star.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://swapi.dev/api/films/'; // Replace with the correct API URL\n\nconst getFilmById = async id => {\n  const response = await axios.get(`${API_URL}${id}/`);\n  return response.data;\n};\nfunction AboutFilm() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Use useParams correctly\n\n  const [film, setFilm] = useState(null);\n  const [otherData, setOtherData] = useState([]); // Use otherData for all related data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const filmId = filmIdFromUrl || id;\n      if (filmId) {\n        const filmData = await getFilmById(filmId);\n        setFilm(filmData);\n        const otherDataPromises = [fetchCharacters(filmData), fetchPlanets(filmData), fetchStarships(filmData), fetchVehicles(filmData), fetchSpecies(filmData)];\n        const otherData = await Promise.all(otherDataPromises);\n        setOtherData(otherData);\n      }\n    };\n    fetchData();\n  }, [filmIdFromUrl, id]);\n  const navigateToCharacter = url => {\n    navigate(`/character/${url.match(/\\/people\\/(\\d+)/)[1]}`);\n  };\n  const fetchCharacters = async filmData => {\n    return await Promise.all(filmData.characters.map(url => fetch(url).then(res => res.json())));\n  };\n  const fetchPlanets = async filmData => {\n    return await Promise.all(filmData.planets.map(url => fetch(url).then(res => res.json())));\n  };\n  const fetchStarships = async filmData => {\n    return await Promise.all(filmData.starships.map(url => fetch(url).then(res => res.json())));\n  };\n  const fetchVehicles = async filmData => {\n    return await Promise.all(filmData.vehicles.map(url => fetch(url).then(res => res.json())));\n  };\n  const fetchSpecies = async filmData => {\n    return await Promise.all(filmData.species.map(url => fetch(url).then(res => res.json())));\n  };\n  if (!film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            paddingTop: '20px',\n            color: 'blue'\n          },\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutFilm, \"jKWo9iVz6sCxD2YKkhP6fqD0mEE=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","useParams","star","jsxDEV","_jsxDEV","API_URL","getFilmById","id","response","get","data","AboutFilm","_s","location","navigate","film","setFilm","otherData","setOtherData","fetchData","filmId","filmIdFromUrl","filmData","otherDataPromises","fetchCharacters","fetchPlanets","fetchStarships","fetchVehicles","fetchSpecies","Promise","all","navigateToCharacter","url","match","characters","map","fetch","then","res","json","planets","starships","vehicles","species","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","fontSize","fontWeight","paddingTop","color","title","director","release_date","producer","opening_crawl","planet","filmIndex","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';  // Import useParams\nimport star from '../img/star.jpeg';\n\nconst API_URL = 'https://swapi.dev/api/films/'; // Replace with the correct API URL\n\nconst getFilmById = async (id) => {\n  const response = await axios.get(`${API_URL}${id}/`);\n  return response.data;\n};\n\nfunction AboutFilm() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { id } = useParams(); // Use useParams correctly\n\n  const [film, setFilm] = useState(null);\n  const [otherData, setOtherData] = useState([]);  // Use otherData for all related data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const filmId = filmIdFromUrl || id;\n      if (filmId) {\n        const filmData = await getFilmById(filmId);\n        setFilm(filmData);\n\n        const otherDataPromises = [\n          fetchCharacters(filmData),\n          fetchPlanets(filmData),\n          fetchStarships(filmData),\n          fetchVehicles(filmData),\n          fetchSpecies(filmData),\n        ];\n\n        const otherData = await Promise.all(otherDataPromises);\n        setOtherData(otherData);\n      }\n    };\n\n    fetchData();\n  }, [filmIdFromUrl, id]);\n\n  const navigateToCharacter = (url) => {\n    navigate(`/character/${url.match(/\\/people\\/(\\d+)/)[1]}`);\n  };\n\n  const fetchCharacters = async (filmData) => {\n    return await Promise.all(filmData.characters.map((url) => fetch(url).then((res) => res.json())));\n  };\n\n  const fetchPlanets = async (filmData) => {\n    return await Promise.all(filmData.planets.map((url) => fetch(url).then((res) => res.json())));\n  };\n\n  const fetchStarships = async (filmData) => {\n    return await Promise.all(filmData.starships.map((url) => fetch(url).then((res) => res.json())));\n  };\n\n  const fetchVehicles = async (filmData) => {\n    return await Promise.all(filmData.vehicles.map((url) => fetch(url).then((res) => res.json())));\n  };\n\n  const fetchSpecies = async (filmData) => {\n    return await Promise.all(filmData.species.map((url) => fetch(url).then((res) => res.json())));\n  };\n\n  if (!film) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>{film.title}</span></p>\n        <p id=\"mainDirector\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span style={{ fontSize: '24px', fontWeight: 600, paddingTop: '20px', color: 'blue' }}>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}