{"ast":null,"code":"import axios from 'axios';\nimport { setFilmDetails } from './aboutFilmReducer';\n\n// Thunk function to fetch film details\nexport const fetchFilmDetails = id => async dispatch => {\n  try {\n    const response = await axios.get(`https://swapi.dev/api/films/${id}/`);\n    const filmData = response.data;\n    const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n    const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n    const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n    const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n    const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n    dispatch(setFilmDetails({\n      film: filmData,\n      characters: charactersData,\n      planets: planetsData,\n      starships: starshipsData,\n      vehicles: vehiclesData,\n      species: speciesData\n    }));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n  }\n};","map":{"version":3,"names":["axios","setFilmDetails","fetchFilmDetails","id","dispatch","response","get","filmData","data","charactersData","Promise","all","characters","map","url","then","res","planetsData","planets","starshipsData","starships","vehiclesData","vehicles","speciesData","species","film","error","console"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmActions.js"],"sourcesContent":["import axios from 'axios';\nimport { setFilmDetails } from './aboutFilmReducer';\n\n// Thunk function to fetch film details\nexport const fetchFilmDetails = (id) => async (dispatch) => {\n  try {\n    const response = await axios.get(`https://swapi.dev/api/films/${id}/`);\n    const filmData = response.data;\n\n    const charactersData = await Promise.all(filmData.characters.map(url => axios.get(url).then(res => res.data)));\n    const planetsData = await Promise.all(filmData.planets.map(url => axios.get(url).then(res => res.data)));\n    const starshipsData = await Promise.all(filmData.starships.map(url => axios.get(url).then(res => res.data)));\n    const vehiclesData = await Promise.all(filmData.vehicles.map(url => axios.get(url).then(res => res.data)));\n    const speciesData = await Promise.all(filmData.species.map(url => axios.get(url).then(res => res.data)));\n\n    dispatch(setFilmDetails({\n      film: filmData,\n      characters: charactersData,\n      planets: planetsData,\n      starships: starshipsData,\n      vehicles: vehiclesData,\n      species: speciesData,\n    }));\n  } catch (error) {\n    console.error('Error fetching film details:', error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,oBAAoB;;AAEnD;AACA,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,+BAA8BH,EAAG,GAAE,CAAC;IACtE,MAAMI,QAAQ,GAAGF,QAAQ,CAACG,IAAI;IAE9B,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,UAAU,CAACC,GAAG,CAACC,GAAG,IAAId,KAAK,CAACM,GAAG,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IAC9G,MAAMS,WAAW,GAAG,MAAMP,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACW,OAAO,CAACL,GAAG,CAACC,GAAG,IAAId,KAAK,CAACM,GAAG,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IACxG,MAAMW,aAAa,GAAG,MAAMT,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACa,SAAS,CAACP,GAAG,CAACC,GAAG,IAAId,KAAK,CAACM,GAAG,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IAC5G,MAAMa,YAAY,GAAG,MAAMX,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACe,QAAQ,CAACT,GAAG,CAACC,GAAG,IAAId,KAAK,CAACM,GAAG,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IAC1G,MAAMe,WAAW,GAAG,MAAMb,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACiB,OAAO,CAACX,GAAG,CAACC,GAAG,IAAId,KAAK,CAACM,GAAG,CAACQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IAExGJ,QAAQ,CAACH,cAAc,CAAC;MACtBwB,IAAI,EAAElB,QAAQ;MACdK,UAAU,EAAEH,cAAc;MAC1BS,OAAO,EAAED,WAAW;MACpBG,SAAS,EAAED,aAAa;MACxBG,QAAQ,EAAED,YAAY;MACtBG,OAAO,EAAED;IACX,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}