{"ast":null,"code":"import { setFilmDetails, setLoading } from './aboutFilmReducer';\nexport const fetchFilmDetails = id => dispatch => {\n  try {\n    dispatch(setLoading(true));\n    fetch(`https://swapi.dev/api/films/${id}/`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching film details: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(filmData => {\n      const charactersPromises = filmData.characters.map(url => fetch(url).then(response => response.json()));\n      const planetsPromises = filmData.planets.map(url => fetch(url).then(response => response.json()));\n      const starshipsPromises = filmData.starships.map(url => fetch(url).then(response => response.json()));\n      const vehiclesPromises = filmData.vehicles.map(url => fetch(url).then(response => response.json()));\n      const speciesPromises = filmData.species.map(url => fetch(url).then(response => response.json()));\n      return Promise.all([Promise.all(charactersPromises), Promise.all(planetsPromises), Promise.all(starshipsPromises), Promise.all(vehiclesPromises), Promise.all(speciesPromises)]);\n    }).then(([charactersData, planetsData, starshipsData, vehiclesData, speciesData]) => {\n      dispatch(setFilmDetails({\n        film: filmData,\n        characters: charactersData,\n        planets: planetsData,\n        starships: starshipsData,\n        vehicles: vehiclesData,\n        species: speciesData\n      }));\n      dispatch(setLoading(false));\n    }).catch(error => {\n      console.error('Error fetching film details:', error.message);\n      dispatch(setLoading(false));\n    });\n  } catch (error) {\n    console.error('Error fetching film details:', error.message);\n    dispatch(setLoading(false));\n  }\n};","map":{"version":3,"names":["setFilmDetails","setLoading","fetchFilmDetails","id","dispatch","fetch","then","response","ok","Error","statusText","json","filmData","charactersPromises","characters","map","url","planetsPromises","planets","starshipsPromises","starships","vehiclesPromises","vehicles","speciesPromises","species","Promise","all","charactersData","planetsData","starshipsData","vehiclesData","speciesData","film","catch","error","console","message"],"sources":["/Users/a1/react/swapi/src/store/aboutFilmActions.js"],"sourcesContent":["import { setFilmDetails, setLoading } from './aboutFilmReducer';\n\nexport const fetchFilmDetails = (id) => (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n\n    fetch(`https://swapi.dev/api/films/${id}/`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error fetching film details: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((filmData) => {\n        const charactersPromises = filmData.characters.map((url) => fetch(url).then((response) => response.json()));\n        const planetsPromises = filmData.planets.map((url) => fetch(url).then((response) => response.json()));\n        const starshipsPromises = filmData.starships.map((url) => fetch(url).then((response) => response.json()));\n        const vehiclesPromises = filmData.vehicles.map((url) => fetch(url).then((response) => response.json()));\n        const speciesPromises = filmData.species.map((url) => fetch(url).then((response) => response.json()));\n\n        return Promise.all([\n          Promise.all(charactersPromises),\n          Promise.all(planetsPromises),\n          Promise.all(starshipsPromises),\n          Promise.all(vehiclesPromises),\n          Promise.all(speciesPromises),\n        ]);\n      })\n      .then(([charactersData, planetsData, starshipsData, vehiclesData, speciesData]) => {\n        dispatch(\n          setFilmDetails({\n            film: filmData,\n            characters: charactersData,\n            planets: planetsData,\n            starships: starshipsData,\n            vehicles: vehiclesData,\n            species: speciesData,\n          })\n        );\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        console.error('Error fetching film details:', error.message);\n        dispatch(setLoading(false));\n      });\n  } catch (error) {\n    console.error('Error fetching film details:', error.message);\n    dispatch(setLoading(false));\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}