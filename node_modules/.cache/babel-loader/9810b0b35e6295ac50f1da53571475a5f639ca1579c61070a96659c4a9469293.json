{"ast":null,"code":"export const fetchHeroDetailsStart = id => ({\n  type: 'FETCH_HERO_DETAILS_START',\n  payload: id\n});\nexport const fetchHeroDetailsSuccess = data => ({\n  type: 'FETCH_HERO_DETAILS_SUCCESS',\n  payload: data\n});\nexport const fetchHeroDetailsError = error => ({\n  type: 'FETCH_HERO_DETAILS_ERROR',\n  payload: error\n});\nexport const fetchHeroDetails = id => async dispatch => {\n  dispatch(fetchHeroDetailsStart(id));\n  try {\n    const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n    if (!response.ok) {\n      throw new Error(`Error fetching hero details: ${response.statusText}`);\n    }\n    const heroData = await response.json();\n    const filmData = await Promise.all(heroData.films.map(async url => {\n      const filmResponse = await fetch(url);\n      if (!filmResponse.ok) {\n        throw new Error(`Error fetching film details: ${filmResponse.statusText}`);\n      }\n      return filmResponse.json();\n    }));\n    dispatch(fetchHeroDetailsSuccess({\n      hero: heroData,\n      films: filmData\n    }));\n  } catch (error) {\n    dispatch(fetchHeroDetailsError(error));\n  }\n};","map":{"version":3,"names":["fetchHeroDetailsStart","id","type","payload","fetchHeroDetailsSuccess","data","fetchHeroDetailsError","error","fetchHeroDetails","dispatch","response","fetch","ok","Error","statusText","heroData","json","filmData","Promise","all","films","map","url","filmResponse","hero"],"sources":["/Users/a1/react/swapi/src/store/heroActions.js"],"sourcesContent":["export const fetchHeroDetailsStart = (id) => ({\n    type: 'FETCH_HERO_DETAILS_START',\n    payload: id,\n  });\n  \n  export const fetchHeroDetailsSuccess = (data) => ({\n    type: 'FETCH_HERO_DETAILS_SUCCESS',\n    payload: data,\n  });\n  \n  export const fetchHeroDetailsError = (error) => ({\n    type: 'FETCH_HERO_DETAILS_ERROR',\n    payload: error,\n  });\n  \n  export const fetchHeroDetails = (id) => async (dispatch) => {\n    dispatch(fetchHeroDetailsStart(id));\n  \n    try {\n      const response = await fetch(`https://swapi.dev/api/people/${id}/`);\n  \n      if (!response.ok) {\n        throw new Error(`Error fetching hero details: ${response.statusText}`);\n      }\n  \n      const heroData = await response.json();\n  \n      const filmData = await Promise.all(\n        heroData.films.map(async (url) => {\n          const filmResponse = await fetch(url);\n          if (!filmResponse.ok) {\n            throw new Error(`Error fetching film details: ${filmResponse.statusText}`);\n          }\n          return filmResponse.json();\n        })\n      );\n  \n      dispatch(fetchHeroDetailsSuccess({ hero: heroData, films: filmData }));\n    } catch (error) {\n      dispatch(fetchHeroDetailsError(error));\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,EAAE,KAAM;EAC1CC,IAAI,EAAE,0BAA0B;EAChCC,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,uBAAuB,GAAIC,IAAI,KAAM;EAChDH,IAAI,EAAE,4BAA4B;EAClCC,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,qBAAqB,GAAIC,KAAK,KAAM;EAC/CL,IAAI,EAAE,0BAA0B;EAChCC,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAIP,EAAE,IAAK,MAAOQ,QAAQ,IAAK;EAC1DA,QAAQ,CAACT,qBAAqB,CAACC,EAAE,CAAC,CAAC;EAEnC,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BV,EAAG,GAAE,CAAC;IAEnE,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,gCAA+BH,QAAQ,CAACI,UAAW,EAAC,CAAC;IACxE;IAEA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAEtC,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAG,CAChCJ,QAAQ,CAACK,KAAK,CAACC,GAAG,CAAC,MAAOC,GAAG,IAAK;MAChC,MAAMC,YAAY,GAAG,MAAMZ,KAAK,CAACW,GAAG,CAAC;MACrC,IAAI,CAACC,YAAY,CAACX,EAAE,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAE,gCAA+BU,YAAY,CAACT,UAAW,EAAC,CAAC;MAC5E;MACA,OAAOS,YAAY,CAACP,IAAI,CAAC,CAAC;IAC5B,CAAC,CACH,CAAC;IAEDP,QAAQ,CAACL,uBAAuB,CAAC;MAAEoB,IAAI,EAAET,QAAQ;MAAEK,KAAK,EAAEH;IAAS,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdE,QAAQ,CAACH,qBAAqB,CAACC,KAAK,CAAC,CAAC;EACxC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}