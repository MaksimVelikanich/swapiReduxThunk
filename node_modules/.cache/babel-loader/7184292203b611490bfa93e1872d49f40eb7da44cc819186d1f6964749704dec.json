{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/AboutFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchFilmDetails } from '../store/aboutFilmActions';\nimport { useNavigate } from 'react-router-dom';\nimport star from '../img/star.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AboutFilm = () => {\n  _s();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const films = useSelector(state => state.films.films);\n  const {\n    filmIndex\n  } = location.state || {};\n  const filmFromLocation = filmIndex !== undefined && films.length > 0 ? films[filmIndex] : null;\n\n  // Отримати episode_id з об'єкта фільму\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n\n  // Використовуємо episode_id для отримання деталей фільму\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      dispatch(fetchFilmDetails(id)).then(() => setLoading(false)).catch(() => setLoading(false));\n    }\n  }, [id, dispatch]);\n  useEffect(() => {\n    if (filmIdFromUrl) {\n      dispatch(setLoading(true)); // Встановлюємо статус завантаження в true перед початком завантаження\n      dispatch(fetchFilmDetails(filmIdFromUrl));\n    }\n  }, [filmIdFromUrl, dispatch]);\n  const filmDetails = useSelector(state => state.aboutFilm);\n  if (!filmDetails.film || filmDetails.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(filmDetails);\n  if (!filmDetails.film) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    film,\n    planets,\n    starships,\n    vehicles,\n    species,\n    characters\n  } = filmDetails;\n  const navigateToCharacter = url => {\n    const characterId = url.split('/')[5];\n    navigate(`/character/${characterId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: star,\n      alt: \"star\",\n      className: \"backStar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tekst\",\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainDirector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tekst\",\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this), \" \", film.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainReleaseDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tekst\",\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }, this), \" \", film.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainProducer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tekst\",\n          children: \"Producer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 30\n        }, this), \" \", film.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"mainOpening\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tekst\",\n          children: \"Opening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), \" \", film.opening_crawl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Planets:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), planets.map((planet, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: planet.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starships\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Starships:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), starships.map((starship, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starship.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Vehicles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), vehicles.map((vehicle, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: vehicle.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Species:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), species.map((specie, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: specie.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"details\",\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), characters.map((character, filmIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"focus\",\n            onClick: () => navigateToCharacter(character.url),\n            children: character.name\n          }, filmIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AboutFilm, \"eiSDcQ673+iwCaelSfXqeLsGlD4=\", false, function () {\n  return [useLocation, useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = AboutFilm;\nexport default AboutFilm;\nvar _c;\n$RefreshReg$(_c, \"AboutFilm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useLocation","fetchFilmDetails","useNavigate","star","jsxDEV","_jsxDEV","AboutFilm","_s","location","dispatch","navigate","films","state","filmIndex","filmFromLocation","undefined","length","episode_id","url","filmIdFromUrl","split","slice","id","setLoading","then","catch","filmDetails","aboutFilm","film","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","planets","starships","vehicles","species","characters","navigateToCharacter","characterId","className","src","alt","title","director","release_date","producer","opening_crawl","map","planet","name","starship","vehicle","specie","character","onClick","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/AboutFilm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchFilmDetails } from '../store/aboutFilmActions';\nimport { useNavigate } from 'react-router-dom';\n\nimport star from '../img/star.jpeg';\n\nconst AboutFilm = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const films = useSelector((state) => state.films.films);\n\n  const { filmIndex } = location.state || {};\n  const filmFromLocation = filmIndex !== undefined && films.length > 0 ? films[filmIndex] : null;\n\n  // Отримати episode_id з об'єкта фільму\n  const episode_id = filmFromLocation ? filmFromLocation.url : null;\n  const filmIdFromUrl = episode_id ? episode_id.split('/').slice(-2, -1)[0] : null;\n\n  // Використовуємо episode_id для отримання деталей фільму\n\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      dispatch(fetchFilmDetails(id))\n        .then(() => setLoading(false))\n        .catch(() => setLoading(false));\n    }\n  }, [id, dispatch]);\n  \n  useEffect(() => {\n    if (filmIdFromUrl) {\n      dispatch(setLoading(true)); // Встановлюємо статус завантаження в true перед початком завантаження\n      dispatch(fetchFilmDetails(filmIdFromUrl));\n    }\n  }, [filmIdFromUrl, dispatch]);\n\n  const filmDetails = useSelector((state) => state.aboutFilm);\n\n  \n\n  if (!filmDetails.film || filmDetails.loading) {\n    return <p>Loading...</p>;\n  }\n\n  console.log(filmDetails);\n\n  if (!filmDetails.film) {\n    return <p>No data available.</p>;\n  }\n\n  const { film, planets, starships, vehicles, species, characters } = filmDetails;\n\n  const navigateToCharacter = (url) => {\n    const characterId = url.split('/')[5];\n    navigate(`/character/${characterId}`);\n  };\n  return (\n    <div className='block'>\n      <img src={star} alt='star' className='backStar' />\n      <div className='filmInfo'>\n        <p id=\"mainTitle\"><span id='tekst'>{film.title}</span></p>\n        <p id=\"mainDirector\"><span id='tekst'>Director:</span> {film.director}</p>\n        <p id=\"mainReleaseDate\"><span id='tekst'>Release Date:</span> {film.release_date}</p>\n        <p id=\"mainProducer\"><span id='tekst'>Producer:</span> {film.producer}</p>\n        <p id=\"mainOpening\"><span id='tekst'>Opening:</span> {film.opening_crawl}</p>\n\n        <div className='detailsInfo'>\n          <div className='planets'>\n            <p id=\"details\" >Planets:</p>\n            {planets.map((planet, filmIndex) => (\n              <p key={filmIndex}>{planet.name}</p>\n            ))}\n          </div>\n\n          <div className=\"starships\">\n            <p id=\"details\">Starships:</p>\n            {starships.map((starship, filmIndex) => (\n              <p key={filmIndex}>{starship.name}</p>\n            ))}\n          </div>\n\n          <div className=\"vehicles\">\n            <p id=\"details\">Vehicles:</p>\n            {vehicles.map((vehicle, filmIndex) => (\n              <p key={filmIndex}>{vehicle.name}</p>\n            ))}\n          </div>\n\n          <div className=\"species\">\n            <p id=\"details\">Species:</p>\n            {species.map((specie, filmIndex) => (\n              <p key={filmIndex}>{specie.name}</p>\n            ))}\n          </div>\n\n          <div className=\"hero\">\n            <p id=\"details\">Characters:</p>\n            {characters.map((character, filmIndex) => (\n              <p id=\"focus\" key={filmIndex} onClick={() => navigateToCharacter(character.url)}>{character.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}