{"ast":null,"code":"var _jsxFileName = \"/Users/a1/react/swapi/src/components/Films.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwapiUrl = 'https://swapi.dev/api/films';\nconst Films = () => {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const response = await axios.get(SwapiUrl);\n        setFilms(response.data.results);\n      } catch (error) {\n        setError('Помилка при отриманні даних');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"console.log(this.state.films);  // \\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0446\\u0435\\u0439 \\u0440\\u044F\\u0434\\u043E\\u043A\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"text-title\",\n      children: \"\\u0424\\u0456\\u043B\\u044C\\u043C\\u0438 \\\"\\u0417\\u043E\\u0440\\u044F\\u043D\\u0456 \\u0432\\u0456\\u0439\\u043D\\u0438\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmsInfo\",\n      children: films.map(film => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filmsAbout\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Episode: \", film.episode_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", film.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Director: \", film.director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", film.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/about-film',\n            state: {\n              film\n            }\n          },\n          children: \"ABOUT FILM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, film.episode_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Films, \"gGFTuEy8nvqq4Fh8h9973jrDEgc=\");\n_c = Films;\nexport default Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","SwapiUrl","Films","_s","films","setFilms","loading","setLoading","error","setError","fetchFilms","response","get","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","map","film","episode_id","title","director","release_date","to","pathname","state","_c","$RefreshReg$"],"sources":["/Users/a1/react/swapi/src/components/Films.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst SwapiUrl = 'https://swapi.dev/api/films';\n\nconst Films = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const response = await axios.get(SwapiUrl);\n        setFilms(response.data.results);\n      } catch (error) {\n        setError('Помилка при отриманні даних');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n          console.log(this.state.films);  // Додайте цей рядок\n\n      <h1 id=\"text-title\">Фільми \"Зоряні війни\"</h1>\n      <div className='filmsInfo'>\n        {films.map((film) => (\n          <div key={film.episode_id} className='filmsAbout'>\n            <p>Episode: {film.episode_id}</p>\n            <p>Title: {film.title}</p>\n            <p>Director: {film.director}</p>\n            <p>Release Date: {film.release_date}</p>\n            <Link to={{ pathname: '/about-film', state: { film } }}>ABOUT FILM</Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Films;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}